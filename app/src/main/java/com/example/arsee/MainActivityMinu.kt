package com.example.arsee

import android.app.Activity
import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.Menu
import android.view.MenuItem
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.core.view.GravityCompat
import com.example.arsee.databinding.ActivityMainMinuBinding
import com.google.android.material.navigation.NavigationView

class MainActivityMinu : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {
    private lateinit var binding: ActivityMainMinuBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityMainMinuBinding.inflate(layoutInflater)
        setContentView(binding.root)
        setSupportActionBar(binding.toolbar)
        binding.navigationView.setNavigationItemSelectedListener(this)

        supportActionBar?.setDisplayHomeAsUpEnabled(true)
        supportActionBar?.title = "Arsee"

        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            ChatFragment.newInstance()).commit()
    }

    override fun onCreateOptionsMenu(menu: Menu?): Boolean {
        menuInflater.inflate(R.menu.menu, menu)
        return true
    }

    override fun onNavigationItemSelected(item: MenuItem): Boolean {
        when(item.itemId){
            R.id.homa -> {
                Toast.makeText(this@MainActivityMinu, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", Toast.LENGTH_SHORT).show()
                supportActionBar?.title = "Arsee"
                home()
            }

            R.id.pay -> {
                Toast.makeText(this@MainActivityMinu, "–î–µ–ª–∞—Ç—å –ø–ª–∞—Ç—ë–∂", Toast.LENGTH_SHORT).show()
                supportActionBar?.title = "–ü–ª–∞—Ç–µ–∂–∏"
                pay()
            }

            R.id.message -> {
                Toast.makeText(this@MainActivityMinu, "–î–µ–ª–∞—Ç—å –ø–ª–∞—Ç—ë–∂", Toast.LENGTH_SHORT).show()
                supportActionBar?.title = "–°–æ–æ–±—â–µ–Ω–∏–µ"
                message()
            }

            R.id.games -> {
                Toast.makeText(this@MainActivityMinu, "–ù–∞—á–Ω—ë–º –∏–≥—Ä—É", Toast.LENGTH_SHORT).show()
                supportActionBar?.title = "–ò–≥—Ä—ã"
                games()
            }

            R.id.steame -> {
                Toast.makeText(this@MainActivityMinu, "–ù–∞—á–Ω—ë–º —Å—Ç—Ä–∏–º", Toast.LENGTH_SHORT).show()
                supportActionBar?.title = "–°—Ç—Ä–∏–º"
                steam()
            }

            R.id.settings -> {
                Toast.makeText(this@MainActivityMinu, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è", Toast.LENGTH_SHORT).show()
                supportActionBar?.title = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
                settings()
            }

            R.id.exit -> {
                finish()
            }
        }
        return true
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        when(item.itemId) {
            android.R.id.home -> {
                menuka()
            }
            R.id.Balance -> {
                Toast.makeText(this@MainActivityMinu, "–ü–æ–∫–∞ —á—Ç–æ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!", Toast.LENGTH_SHORT).show()
            }
            R.id.schyt -> {
                Toast.makeText(this@MainActivityMinu, "–£ –≤–∞—Å –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ üåö", Toast.LENGTH_SHORT).show()
            }
        }
        return true
    }

    private fun menuka() {
        binding.drawel.openDrawer(GravityCompat.START)
    }

    private fun home(){
        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            HomaFragment.newInstance()).commit()
    }

    private fun pay(){
        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            PayFragment.newInstance()).commit()
    }

    private fun settings(){
        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            SettingsFragment.newInstance()).commit()
    }

    private fun games(){
        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            GamesFragment.newInstance()).commit()
    }

    private fun steam(){
        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            SteamFragment.newInstance()).commit()
    }

    private fun message(){
        supportFragmentManager.beginTransaction().replace(R.id.fragmentHome,
            MessageFragment.newInstance()).commit()
    }

}
